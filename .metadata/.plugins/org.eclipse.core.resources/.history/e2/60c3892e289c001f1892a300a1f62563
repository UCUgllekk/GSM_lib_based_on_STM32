/**
  ******************************************************************************
  * @file     lib.c
  * @author   Auto-generated by STM32CubeIDE
  * @version  V1.0
  * @date     02/11/2024 18:42:21
  * @brief    Default under dev library file.
  ******************************************************************************
*/

/* Includes ------------------------------------------------------------------*/
#include <GSMModule.hpp>
#include "stm32f3xx_hal.h"
#include "usart.h"
#include "usb.h"
#include <cstring>
#include <iostream>
#include <string>

GSM_Module::GSM_Module(const Parameters& parameters){
	this->parameters = parameters;
}

int GSM_Module::send_sms(const char* message){
	return 0;
}

void GSM_Module::make_call(const char* number){
	char command[32] = "ATD";
	strcat(command, number);
	strcat(command, "\r\n");
	HAL_UART_Transmit(this->parameters.uart_handle, (uint8_t*)command.c_str(), command.length(), 100);
}

bool GSM_Module::send_AT(){
	// private send "AT" command, return true if accepted good, return false if otherwise
	const char* check = "AT\r\n\x1A";
	HAL_UART_Transmit(this->parameters.uart_handle, (uint8_t*)check, 8, 100);
	char answer[16];
	while(1){
		HAL_StatusTypeDef result = HAL_UART_Receive(this->parameters.uart_handle, (uint8_t*)answer, 16, 100);
		if (result == HAL_OK){
		  if (strstr(answer, "OK") != nullptr){
			  return true;
		  }
		}
	}
}


int GSM_Module::send_at_command(const char* command){
	return 0;
}

Parameters load_parameters(){
	Parameters parameters;
	parameters.uart_handle = &huart2;
	parameters.rx_pin = USART_RX_Pin;
	parameters.rx_port = USART_RX_GPIO_Port;
	parameters.tx_pin = USART_TX_Pin;
	parameters.tx_port = USART_TX_GPIO_Port;
	return parameters;
}
